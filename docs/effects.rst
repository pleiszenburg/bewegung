.. _effects:

Effects
=======

Effects can be applied to :ref:`layers <layer_tasks>` by decorating layer methods within :ref:`sequence classes <sequences>`. Layers can be combined with an arbitrary number of effects. From a functional point of view, effects post-process images generated by layer tasks. There is a set of readily available effects in ``bewegung``. However, new custom effects can be easily added as well.

Available Effects
-----------------

.. autoclass:: bewegung.FadeInEffect

.. autoclass:: bewegung.FadeOutEffect

Defining Custom Effects
-----------------------

Custom effects are implemented by deriving from :class:`bewegung.EffectBase`. Once derived, they can be directly applied to layers.

The ``EffectBase`` Class
~~~~~~~~~~~~~~~~~~~~~~~~

.. autoclass:: bewegung.EffectBase
    :members:
    :private-members:

.. note::

    Similar to prepare task methods and layer task methods, the ``apply`` method in classes derived from :class:`bewegung.EffectBase` can :ref:`request parameters on demand <requesting_parameters>`. See :meth:`bewegung.EffectBase.apply_` for details.

A Minimal Effect based on ``opencv``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Foo bar.
